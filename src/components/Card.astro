---
const { data } = Astro.props; // Definerer en konstant "data", der har adgang til dataen i databasen
console.log(data); // Viser data i terminalen
---

<article class="boks">
  <!--En specifik URL der åbnes, når man klikker på et specifikt card -->
  <a href={`/singleview/${data.slug}`}>
    {
      data.tilbud && (
        <div class="tilbud_boks">
          <img class="tilbud_gulboks" src="/img/produktliste/tilbud_gulboks.svg" alt="Tilbudsboks" />
          <p class="tilbud_procent">{data.procent}%</p>
        </div>
      )
    }
    <img src={data.billede} class="center_img" alt="Produktbillede" />
    <div class="tekstfelt">
      <div class="flex_1">
        <p class="produktbeskrivelse">{data.navn}</p>
        {data.tilbud && <p class="produkt_pris_foer gammel_pris">kr. {data.pris},-</p>}
        {data.tilbud && <p class="produkt_pris hide" />}
        {data.ikketilbud && <p class="produkt_pris">kr. {data.pris},-</p>}
      </div>
      <div class="flex_1">
        <p class="produktfarve">{data.farve}</p>
        {data.tilbud && <p class="produkt_pris_efter ny_pris">kr. {(data.pris * (100 - data.procent)) / 100},-</p>}
      </div>
    </div>
  </a>
  <div class="flex_2">
    <button class="kob_knap"><p>Læg i kurv</p></button>
    <button class="hjerte_knap"></button>
  </div>
</article>

<style>
  .boks {
    background-color: white;
    width: 95%;
    height: 95%;
    text-align: left;
    cursor: pointer;
    position: relative;
    margin-bottom: 20px;
  }
  .flex_1 {
    display: flex;
    justify-content: space-between;
  }
  .flex_2 {
    display: flex;
    justify-content: flex-start;
    gap: 10px;
    margin-left: 20px;
    margin-right: 20px;
    margin-bottom: 18px;
    padding-bottom: 2px;
  }
  .tekstfelt {
    margin-left: 20px;
    margin-right: 20px;
    margin-bottom: 12px;
  }
  .produktbeskrivelse,
  .produkt_pris,
  .produktfarve,
  p {
    margin: 0;
  }
  a {
    text-decoration: none;
    color: inherit;
  }
  .center_img {
    position: relative; /*For at kunne positionere med tilbud_boks og tilbud_procent*/
    display: block;
    max-width: 337px;
    margin-left: auto; /*For at kunne centrere produktbilledet i .boks */
    margin-right: auto; /*For at kunne centrere produktbilledet i .boks */
  }
  .produkt_pris_efter {
    color: red;
  }
  .produkt_pris_foer {
    text-decoration: line-through;
  }
  .tilbud_boks {
    position: absolute; /*For at kunne positionere med center_img og tilbud_procent*/
    top: -8px;
    right: 0;
    z-index: 2;
  }
  .tilbud_gulboks {
    width: 90px;
  }
  .tilbud_procent {
    position: absolute; /*For at kunne positionere med tilbud_boks og center_img*/
    top: 30px;
    left: 21px;
    font-family: var(--mulish);
    font-size: 23px;
    font-weight: 800;
  }
  .kob_knap {
    width: 100%;
    height: 46px;
    border: 1px solid black;
    background-color: white;
    text-align: center;
    text-decoration: none;
    font-size: 15px;
    cursor: pointer;
  }
  .hjerte_knap {
    cursor: pointer;
    width: 46px;
    height: 46px;
    border: 1px solid black;
    background-color: white;
    font-size: 24px;
    cursor: pointer;
  }
  /* ChatGPT - Tilføjer et indhold før knappen ved hjælp af Unicode-tegn for et tomt hjerte */
  .hjerte_knap::before {
    content: "\2661"; /* Unicode for et tomt hjerte */
  }
  /* ChatGPT - Ændrer indholdet til et fyldt hjerte, når klassen "fyldt" er tilføjet */
  .hjerte_knap.fyldt::before {
    content: "\2665"; /* Unicode for et fyldt hjerte */
    color: var(--green_100);
  }
  @media (min-width: 800px) {
    .tekstfelt {
      margin-bottom: 0;
    }
    /* ChatGPT - Skjuler disse elementer ved hover */
    .boks:hover .produktbeskrivelse,
    .boks:hover .produkt_pris,
    .boks:hover .produktfarve,
    .boks:hover .produkt_pris_foer,
    .boks:hover .produkt_pris_efter {
      display: none;
    }
    /* ChatGPT - Viser disse elementer ved hover */
    .boks:hover .kob_knap,
    .boks:hover .hjerte_knap {
      display: block;
    }
    .kob_knap,
    .hjerte_knap {
      display: none;
    }
  }
</style>

<script>
  // ChatGPT - Tilføjer en eventlistener til knappen, som skifter klassen "fyldt" til og fra, hver gang der klikkes.
  document.addEventListener("DOMContentLoaded", function () {
    const hjerteKnapper = document.querySelectorAll(".hjerte_knap");
    hjerteKnapper.forEach(function (hjerteKnap) {
      hjerteKnap.addEventListener("click", function () {
        hjerteKnap.classList.toggle("fyldt");
      });
    });
  });
</script>
