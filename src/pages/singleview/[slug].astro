---
import Mainlayout from "../../layout/Mainlayout.astro";
import GreenAccordion from "../../components/GreenAccordion.astro";
import BeigeAccordion from "../../components/BeigeAccordion.astro";
import AntalAccordion from "../../components/AntalAccordion.astro";

// Bruger funktionen getStaticPaths() til at generere stier for statiske sider baseret på data fra database.
export async function getStaticPaths() {
  // Henter data fra en bestemt URL vha. fetch-funktionen.
  const data = await fetch("https://luvjovwwuzjlkywrsuam.supabase.co/rest/v1/produkt", {
    method: "GET",
    headers: {
      apikey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imx1dmpvdnd3dXpqbGt5d3JzdWFtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTYyNzYyOTQsImV4cCI6MjAzMTg1MjI5NH0.HwPdPpwdrXR9WhOCP1MwJCnXJNM9Kg8hd1YGu_s7lR8",
    },
  }).then((response) => response.json());
  // Når dataen er hentet, mapper funktionen over dataen og returnerer en liste over stier og egenskaber for hver side, der skal genereres statisk.
  return data.map((show) => {
    return {
      params: { slug: show.slug },
      props: { data: show },
    };
  });
}
const { data } = Astro.props; // Definerer en konstant "data", der har adgang til dataen i databasen
console.log(data); // Viser data i terminalen
---

<Mainlayout title={data.navn}>
  <section class="grid_singleview margen_v_mobil margen_h_mobil">
    <div class="singleview_img">
      <img src={data.billede} alt="Produkt" />
      {
        data.tilbud && (
          <div class="tilbud_boks">
            <img class="tilbud_gulboks" src="/img/produktliste/tilbud_gulboks.svg" alt="Tilbudsboks" />
            <p class="tilbud_procent">{data.procent}%</p>
          </div>
        )
      }
    </div>
    <div class="singleview_tekst">
      <h3>{data.navn}</h3>
      <div class="grid_farve_pris">
        <p>Farve: {data.farve}</p>
        <div class="vertikal_streg"></div>
        {data.ikketilbud && <p class="produkt_pris">kr. {data.pris},-</p>}
        {data.tilbud && <p class="produkt_pris_foer gammel_pris">kr. {data.pris},-</p>}
        {data.tilbud && <p class="produkt_pris_efter ny_pris">kr. {(data.pris * (100 - data.procent)) / 100},-</p>}
      </div>
      <p class="p_beskrivelse">{data.beskrivelse}</p>
      <BeigeAccordion accordion_txt="Læs beskrivelse">
        <p class="beige_p">{data.accordion_beskrivelse}</p>
      </BeigeAccordion>
      <AntalAccordion />
      <div class="flex_2">
        <button class="kob_knap"><p class="kruv_tekst">Læg i kurv</p></button>
        <button class="hjerte_knap"></button>
      </div>
    </div>
  </section>
  <section class="groen_boks">
    <GreenAccordion green_accordion_txt="Levering">
      <p class="green_p">Alle ordrer sendes indenfor to hverdage. Varerne bliver pakket ansvarligt, så indholdet ikke går i stykker. Pakken sendes med GLS eller Postnord.</p>
    </GreenAccordion>
    <GreenAccordion green_accordion_txt="Returnering">
      <p class="green_p">Alle ordre skal returneres inde for 14 dage. Varen skal pakkes ansvarligt, så indholdet ikke går i stykker. Pakken skal returneres ved GLS eller PostNord pakkeshop</p>
    </GreenAccordion>
    <GreenAccordion green_accordion_txt="Vilkår og betingelser">
      <p class="green_p">Ved køb af varer på hjemmesiden, skal navn, adresse og betalings-informationer oplyses. Specialordre kan ikke tages retur. Du har ret til at foretage reklamation på dine varer.</p>
    </GreenAccordion>
  </section>
</Mainlayout>

<style>
  .vertikal_streg {
    border-left: 1px solid black;
    height: 25px;
  }
  .grid_farve_pris {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .grid_singleview {
    margin-top: 7%;
  }
  .singleview_img {
    position: relative;
  }
  h3 {
    margin-bottom: 17px;
  }
  p {
    font-size: 16px;
  }
  .green_p {
    padding-left: 1rem;
  }
  .beige_p {
    padding: 0.5rem;
  }
  .p_beskrivelse {
    margin: 0 0 43px 0;
  }
  .singleview_tekst {
    min-width: 323px;
  }
  /*Nedenstående er til, hvis produktet er på tilbud */
  .tilbud_boks {
    position: absolute; /*For at kunne positionere med center_img og tilbud_procent*/
    top: -8px;
    right: 0;
    z-index: 2;
  }
  .tilbud_gulboks {
    width: 115px;
  }
  .tilbud_procent {
    position: absolute; /*For at kunne positionere med tilbud_boks og center_img*/
    top: 11px;
    left: 24px;
    font-family: var(--mulish);
    font-size: 30px;
    font-weight: 800;
  }
  .produkt_pris_efter {
    color: red;
  }
  .produkt_pris_foer {
    text-decoration: line-through;
  }
  /*Nedenstående er til Læg i kurv- og Hjerteknappen */
  .kruv_tekst {
    margin: 0;
  }
  .flex_2 {
    display: flex;
    justify-content: flex-start;
    gap: 10px;
    margin-bottom: 18px;
    padding-bottom: 20px;
    padding-top: 15px;
  }
  .kob_knap {
    width: 100%;
    height: 46px;
    border: 1px solid black;
    background-color: var(--baggrund_50);
    text-align: center;
    text-decoration: none;
    font-size: 16px;
    cursor: pointer;
  }
  .hjerte_knap {
    width: 46px;
    height: 46px;
    border: 1px solid black;
    background-color: var(--baggrund_50);
    font-size: 24px;
    cursor: pointer;
  }
  /* ChatGPT - Tilføjer et indhold før knappen ved hjælp af Unicode-tegn for et tomt hjerte */
  .hjerte_knap::before {
    content: "\2661"; /* Unicode for et tomt hjerte */
  }
  /* ChatGPT - Ændrer indholdet til et fyldt hjerte, når klassen "fyldt" er tilføjet */
  .hjerte_knap.fyldt::before {
    content: "\2665"; /* Unicode for et fyldt hjerte */
    color: var(--green_100);
  }
  @media (min-width: 800px) {
    .grid_singleview {
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .singleview_img {
      width: 488px;
      margin-right: 50px;
    }
    .singleview_tekst {
      margin-right: 50px;
    }
  }
</style>

<script>
  // ChatGPT - Tilføjer en eventlistener til knappen, som skifter klassen "fyldt" til og fra, hver gang der klikkes.
  document.addEventListener("DOMContentLoaded", function () {
    const hjerteKnap = document.querySelector(".hjerte_knap");
    hjerteKnap.addEventListener("mousedown", function () {
      hjerteKnap.classList.toggle("fyldt");
    });
  });
</script>
